[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]

[project]
authors = [
    {name = "Vetrichelvan", email = "pythonhubdev@gmail.com"}
]
dependencies = [
    "loguru>=0.7.2",
    "granian>=1.5.2",
    "hypercorn>=0.17.3",
    "python-dotenv>=1.0.1",
    "bcrypt>=4.2.0",
    "beanie>=1.26.0",
    "fastapi>=0.114.0",
    "pydantic>=2.9.1",
    "pydantic-settings>=2.4.0",
    "httpx>=0.27.2",
    "pymupdf>=1.24.10",
    "python-pptx>=1.0.2",
    "python-docx>=1.1.2",
    "predibase>=2024.9.2",
    "opentelemetry-sdk>=1.27.0",
    "opentelemetry-api>=1.27.0",
    "opentelemetry-exporter-otlp-proto-grpc>=1.27.0",
    "opentelemetry-instrumentation-fastapi>=0.48b0",
    "python-multipart>=0.0.9"
]
description = "A Python backend service that leverages Predibase to extract and summarize key points from PDF, PPT, and DOCX files."
name = "owow-backend"
readme = "README.md"
requires-python = ">= 3.8"
version = "1.0.0"

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "class .*\\(.*\\bProtocol\\b.*\\):",
    "@(?:typing\\.)?overload",
    "if TYPE_CHECKING:",
    "raise NotImplementedError"
]
omit = [
    "tests/*",
    "alembic/*"
]
precision = 2
show_missing = true
skip_covered = true
skip_empty = true

[tool.coverage.run]
omit = [
    "tests/*"
]
relative_files = true
flake8-builtins.builtins-ignorelist = [
    "input",
    "filter",
    "id"
]
isort.combine-as-imports = true

[tool.hatch.build.targets.wheel]
packages = ["owow_backend"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.pytest.ini_options]
addopts = "-ra -q --rich"
markers = []
minversion = "6.0"
python_files = "tests.py test_*.py *_tests.py"
testpaths = [
    "tests"
]

[tool.pytest_env]
APP_DEBUG = "1"
APP_TESTING = "1"
DATABASE_NAME = "test_db"
REDIS_DB = 9
REDIS_HOST = {value = "localhost", skip_if_set = true}

[tool.rye]
dev-dependencies = [
    "ruff>=0.6.3",
    "pytest>=8.3.2",
    "pytest-env>=1.1.3",
    "coverage>=7.6.1",
    "pytest-cov>=5.0.0",
    "pytest-richer>=0.1.1",
    "mypy>=1.11.2",
    "pyright>=1.1.379"
]
managed = true
use-uv = true

[tool.rye.scripts]
dev = "python -m owow_backend"
format = "ruff format"
lint = "ruff check --fix"
lints = {chain = ["lint", "tc"]}
module = "python -m owow_backend"
tc = "pyright ./evalai_backend/**"
test = "pytest --cov --cov-report=xml"
